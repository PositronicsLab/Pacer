# Moby Interface
add_library(PacerMobyPlugin MODULE ${CMAKE_CURRENT_SOURCE_DIR}/moby.cpp)
# osg
option(USE_DISPLAY "Display Visualizations?" OFF)
IF(USE_DISPLAY)
    add_definitions (-DUSE_OSG_DISPLAY)
#find OSG
  find_package (osg)
  find_package (osgViewer)
  find_package (osgDB)
  find_package (osgGA)
  find_package (osgFX)
  find_package (osgUtil)
  find_package (osgText)
  find_package (OpenThreads)
  link_directories(${OSG_LIBRARY_DIRS})
  include_directories(${OSG_INCLUDE_DIR})
  IF(OSG_FOUND)
    target_link_libraries (PacerMobyPlugin ${OSG_LIBRARIES})
    target_link_libraries (PacerMobyPlugin ${OSGVIEWER_LIBRARIES})
    target_link_libraries (PacerMobyPlugin ${OSGDB_LIBRARIES})
    target_link_libraries (PacerMobyPlugin ${OSGGA_LIBRARIES})
    target_link_libraries (PacerMobyPlugin ${OPENTHREADS_LIBRARY})
    target_link_libraries (PacerMobyPlugin ${OSGUTIL_LIBRARIES})
    target_link_libraries (PacerMobyPlugin ${OSGTEXT_LIBRARIES})
    target_link_libraries (PacerMobyPlugin ${OSGMANIPULATOR_LIBRARIES})
    target_link_libraries (PacerMobyPlugin OpenThreads)
  ENDIF(OSG_FOUND)
ENDIF(USE_DISPLAY)
target_link_libraries (PacerMobyPlugin ${REQLIBS})

# Gazebo Interface
set(USE_GAZEBO CACHE BOOL false)
IF(USE_GAZEBO)
include (FindPkgConfig)
IF(PKG_CONFIG_FOUND)
  pkg_check_modules(GAZEBO gazebo)
ENDIF(PKG_CONFIG_FOUND)
include_directories(${GAZEBO_INCLUDE_DIRS})
link_directories(${GAZEBO_LIBRARY_DIRS})
IF(GAZEBO_FOUND)
  add_library(PacerGazeboPlugin SHARED ${CMAKE_CURRENT_SOURCE_DIR}/gazebo.cpp)
  target_link_libraries(PacerGazeboPlugin ${REQLIBS} ${GAZEBO_LIBRARIES} ${BOOST_LIBRARIES} ${Boost_SYSTEM_LIBRARY} protobuf ${EXTRA_LIBS})
ENDIF(GAZEBO_FOUND)
ENDIF(USE_GAZEBO)

install (DIRECTORY ${CMAKE_CURRENT_BINARY_DIR} DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/Pacer)
