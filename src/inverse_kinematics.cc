#include <Log.h>
#include <math.h>
#include <stdio.h>
#include <iostream>

void check_vals(double th[3]){
  for(int i=0;i<3;i++){
    if(!isfinite(th[i])){
      th[i] = 0;
      OUT_LOG(logDEBUG4) << "Inverse kinematics solution was NaN, setting to X[2]ero!" << std::endl;
    }
  }
}

void lf(const double X[3],double th[3]){
     th[2] = acos((-250000.*X[2])/
        sqrt(1.97936761e8 - 7.0345e9*X[1] + 6.25e10*pow(X[1],2) +
          6.25e10*pow(X[2],2)));
     th[1] = acos((0.5*(-7.069909848593513e20 +
            1.922498403026508e22*X[0] - 1.42520571432e23*pow(X[0],2) +
            3.08424e23*pow(X[0],3) + 5.346991785271488e21*X[1] -
            3.4713738048e22*X[0]*X[1] - 4.7506857144e22*pow(X[1],2) +
            3.08424e23*X[0]*pow(X[1],2) - 4.7506857144e22*pow(X[2],2) +
            3.08424e23*X[0]*pow(X[2],2) +
            sqrt(pow(7.069909848593513e20 - 1.922498403026508e22*X[0] +
                1.42520571432e23*pow(X[0],2) - 3.08424e23*pow(X[0],3) -
                5.346991785271488e21*X[1] + 3.4713738048e22*X[0]*X[1] +
                4.7506857144e22*pow(X[1],2) - 3.08424e23*X[0]*pow(X[1],2) +
                4.7506857144e22*pow(X[2],2) - 3.08424e23*X[0]*pow(X[2],2),2)\
               - 4.*(6.395405945041786e20 - 7.326127453890528e21*X[0] +
                 2.3781340944e22*pow(X[0],2) - 2.676637485929088e21*X[1] +
                 2.3781340944e22*pow(X[1],2) + 2.3781340944e22*pow(X[2],2))
                *(1.4615489974718797e20 - 9.169078733942252e21*X[0] +
                 1.2466594059e23*pow(X[0],2) - 6.16124e23*pow(X[0],3) +
                 1.e24*pow(X[0],4) - 6.73331512722704e20*X[1] +
                 6.9345988448e22*X[0]*X[1] - 2.25104e23*pow(X[0],2)*X[1] +
                 1.8650356506e22*pow(X[1],2) - 6.16124e23*X[0]*pow(X[1],2) +
                 2.e24*pow(X[0],2)*pow(X[1],2) - 2.25104e23*pow(X[1],3) +
                 1.e24*pow(X[1],4) + 5.982403802e21*pow(X[2],2) -
                 6.16124e23*X[0]*pow(X[2],2) + 2.e24*pow(X[0],2)*pow(X[2],2) -
                 2.25104e23*X[1]*pow(X[2],2) + 2.e24*pow(X[1],2)*pow(X[2],2) +
                 1.e24*pow(X[2],4)))))/
        (6.395405945041786e20 - 7.326127453890528e21*X[0] +
          2.3781340944e22*pow(X[0],2) - 2.676637485929088e21*X[1] +
          2.3781340944e22*pow(X[1],2) + 2.3781340944e22*pow(X[2],2)));
     th[0] = acos(0.14475139578157767 - 14.907855090743466*X[0] +
        48.39238559362552*pow(X[0],2) - 5.44665978333374*X[1] +
        48.39238559362552*pow(X[1],2) + 48.39238559362552*pow(X[2],2));
}
void rf(const double X[3],double th[3]){
     th[2] = -1.*acos((-250000.*X[2])/
         sqrt(1.97936761e8 + 7.0345e9*X[1] + 6.25e10*pow(X[1],2) +
           6.25e10*pow(X[2],2)));
     th[1] = -1.*acos((0.5*(-7.069909848593513e20 +
             1.922498403026508e22*X[0] - 1.42520571432e23*pow(X[0],2) +
             3.08424e23*pow(X[0],3) - 5.346991785271488e21*X[1] +
             3.4713738048e22*X[0]*X[1] - 4.7506857144e22*pow(X[1],2) +
             3.08424e23*X[0]*pow(X[1],2) - 4.7506857144e22*pow(X[2],2) +
             3.08424e23*X[0]*pow(X[2],2) +
             sqrt(pow(7.069909848593513e20 - 1.922498403026508e22*X[0] +
                 1.42520571432e23*pow(X[0],2) - 3.08424e23*pow(X[0],3) +
                 5.346991785271488e21*X[1] - 3.4713738048e22*X[0]*X[1] +
                 4.7506857144e22*pow(X[1],2) - 3.08424e23*X[0]*pow(X[1],2) +
                 4.7506857144e22*pow(X[2],2) - 3.08424e23*X[0]*pow(X[2],2),2)\
                - 4.*(6.395405945041786e20 - 7.326127453890528e21*X[0] +
                  2.3781340944e22*pow(X[0],2) + 2.676637485929088e21*X[1] +
                  2.3781340944e22*pow(X[1],2) + 2.3781340944e22*pow(X[2],2)
                  )*(1.4615489974718797e20 - 9.169078733942252e21*X[0] +
                  1.2466594059e23*pow(X[0],2) - 6.16124e23*pow(X[0],3) +
                  1.e24*pow(X[0],4) + 6.73331512722704e20*X[1] -
                  6.9345988448e22*X[0]*X[1] + 2.25104e23*pow(X[0],2)*X[1] +
                  1.8650356506e22*pow(X[1],2) - 6.16124e23*X[0]*pow(X[1],2) +
                  2.e24*pow(X[0],2)*pow(X[1],2) + 2.25104e23*pow(X[1],3) +
                  1.e24*pow(X[1],4) + 5.982403802e21*pow(X[2],2) -
                  6.16124e23*X[0]*pow(X[2],2) +
                  2.e24*pow(X[0],2)*pow(X[2],2) +
                  2.25104e23*X[1]*pow(X[2],2) +
                  2.e24*pow(X[1],2)*pow(X[2],2) + 1.e24*pow(X[2],4)))))/
         (6.395405945041786e20 - 7.326127453890528e21*X[0] +
           2.3781340944e22*pow(X[0],2) + 2.676637485929088e21*X[1] +
           2.3781340944e22*pow(X[1],2) + 2.3781340944e22*pow(X[2],2)));
     th[0] = -1.*acos(0.14475139578157767 - 14.907855090743466*X[0] +
         48.39238559362552*pow(X[0],2) + 5.44665978333374*X[1] +
         48.39238559362552*pow(X[1],2) + 48.39238559362552*pow(X[2],2));
}

void lh(const double X[3],double th[3]){
     th[2] = -1.*acos((-250000.*X[2])/
         sqrt(1.97936761e8 - 7.0345e9*X[1] + 6.25e10*pow(X[1],2) +
           6.25e10*pow(X[2],2)));
     th[1] = -1.*acos((0.5*(2.9691245967357383e19 -
             4.443405069000888e21*X[0] - 8.145632052e22*pow(X[0],2) -
             3.08424e23*pow(X[0],3) + 3.05602392905568e21*X[1] +
             3.4713738048e22*X[0]*X[1] - 2.715210684e22*pow(X[1],2) -
             3.08424e23*X[0]*pow(X[1],2) - 2.715210684e22*pow(X[2],2) -
             3.08424e23*X[0]*pow(X[2],2) +
             sqrt(pow(-2.9691245967357383e19 +
                 4.443405069000888e21*X[0] + 8.145632052e22*pow(X[0],2) +
                 3.08424e23*pow(X[0],3) - 3.05602392905568e21*X[1] -
                 3.4713738048e22*X[0]*X[1] + 2.715210684e22*pow(X[1],2) +
                 3.08424e23*X[0]*pow(X[1],2) + 2.715210684e22*pow(X[2],2) +
                 3.08424e23*X[0]*pow(X[2],2),2) -
               4.*(2.5962445204176637e20 + 4.18718070001008e21*X[0] +
                  2.3781340944e22*pow(X[0],2) - 2.676637485929088e21*X[1] +
                  2.3781340944e22*pow(X[1],2) + 2.3781340944e22*pow(X[2],2)
                  )*(-7.411944972995566e19 - 3.8507049992682e20*X[0] +
                  2.8813614174e22*pow(X[0],2) + 3.5214e23*pow(X[0],3) +
                  1.e24*pow(X[0],4) + 2.92279216820184e21*X[1] -
                  3.963406128e22*X[0]*X[1] - 2.25104e23*pow(X[0],2)*X[1] -
                  1.3300418966e22*pow(X[1],2) + 3.5214e23*X[0]*pow(X[1],2) +
                  2.e24*pow(X[0],2)*pow(X[1],2) - 2.25104e23*pow(X[1],3) +
                  1.e24*pow(X[1],4) - 2.596837167e22*pow(X[2],2) +
                  3.5214e23*X[0]*pow(X[2],2) + 2.e24*pow(X[0],2)*pow(X[2],2) -
                  2.25104e23*X[1]*pow(X[2],2) +
                  2.e24*pow(X[1],2)*pow(X[2],2) + 1.e24*pow(X[2],4)))))/
         (2.5962445204176637e20 + 4.18718070001008e21*X[0] +
           2.3781340944e22*pow(X[0],2) - 2.676637485929088e21*X[1] +
           2.3781340944e22*pow(X[1],2) + 2.3781340944e22*pow(X[2],2)));
     th[0] = -1.*acos(-0.6283357275466106 + 8.520447331469645*X[0] +
         48.39238559362552*pow(X[0],2) - 5.44665978333374*X[1] +
         48.39238559362552*pow(X[1],2) + 48.39238559362552*pow(X[2],2));
}

void rh(const double X[3],double th[3]){
     th[2] = acos((-250000.*X[2])/
        sqrt(1.97936761e8 + 7.0345e9*X[1] + 6.25e10*pow(X[1],2) +
          6.25e10*pow(X[2],2)));
     th[1] = acos((0.5*(2.9691245967357383e19 -
            4.443405069000888e21*X[0] - 8.145632052e22*pow(X[0],2) -
            3.08424e23*pow(X[0],3) - 3.05602392905568e21*X[1] -
            3.4713738048e22*X[0]*X[1] - 2.715210684e22*pow(X[1],2) -
            3.08424e23*X[0]*pow(X[1],2) - 2.715210684e22*pow(X[2],2) -
            3.08424e23*X[0]*pow(X[2],2) +
            sqrt(pow(-2.9691245967357383e19 + 4.443405069000888e21*X[0] +
                8.145632052e22*pow(X[0],2) + 3.08424e23*pow(X[0],3) +
                3.05602392905568e21*X[1] + 3.4713738048e22*X[0]*X[1] +
                2.715210684e22*pow(X[1],2) + 3.08424e23*X[0]*pow(X[1],2) +
                2.715210684e22*pow(X[2],2) + 3.08424e23*X[0]*pow(X[2],2),2) -
              4.*(2.5962445204176637e20 + 4.18718070001008e21*X[0] +
                 2.3781340944e22*pow(X[0],2) + 2.676637485929088e21*X[1] +
                 2.3781340944e22*pow(X[1],2) + 2.3781340944e22*pow(X[2],2))
                *(-7.411944972995566e19 - 3.8507049992682e20*X[0] +
                 2.8813614174e22*pow(X[0],2) + 3.5214e23*pow(X[0],3) +
                 1.e24*pow(X[0],4) - 2.92279216820184e21*X[1] +
                 3.963406128e22*X[0]*X[1] + 2.25104e23*pow(X[0],2)*X[1] -
                 1.3300418966e22*pow(X[1],2) + 3.5214e23*X[0]*pow(X[1],2) +
                 2.e24*pow(X[0],2)*pow(X[1],2) + 2.25104e23*pow(X[1],3) +
                 1.e24*pow(X[1],4) - 2.596837167e22*pow(X[2],2) +
                 3.5214e23*X[0]*pow(X[2],2) + 2.e24*pow(X[0],2)*pow(X[2],2) +
                 2.25104e23*X[1]*pow(X[2],2) + 2.e24*pow(X[1],2)*pow(X[2],2) +
                 1.e24*pow(X[2],4)))))/
        (2.5962445204176637e20 + 4.18718070001008e21*X[0] +
          2.3781340944e22*pow(X[0],2) + 2.676637485929088e21*X[1] +
          2.3781340944e22*pow(X[1],2) + 2.3781340944e22*pow(X[2],2)));
     th[0] = acos(-0.6283357275466106 + 8.520447331469645*X[0] +
        48.39238559362552*pow(X[0],2) + 5.44665978333374*X[1] +
        48.39238559362552*pow(X[1],2) + 48.39238559362552*pow(X[2],2));
}
