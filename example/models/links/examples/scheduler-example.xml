<XML>
  <plugins type="string vector">
    plugin-scheduler
  </plugins>
  
  <!-- =================== PLUGIN DESCRIPTIONS ==================== -->
  <plugin-scheduler>
    <file type="string">libplugin-scheduler.so</file>
    <real-time-factor type="double">10</real-time-factor>
    <priority type="double">0</priority>
    <relative-start-time type="bool">true</relative-start-time>
    <events type="string vector">init jump</events>
    <!--  PERSISTENT    -->
    <init>
      <time type="double">0</time>
      <open type="string vector">
        gamepad
        end-effectors
        error-check
        center-of-mass
        orient-base
        settle-feet
        eef-PID-controller
      </open>
    </init>
    <!--   WALK   -->
    
    <jump>
      <time type="double">0.1</time>
      <open type="string vector">
        jump-to
      </open>
      <close type="string vector">
        settle-feet
      </close>
    </jump>
  </plugin-scheduler>
  
  <error-check>
    <file type="string">liberror-check.so</file>
    <real-time-factor type="double">1</real-time-factor>
    <priority type="double">0</priority>
  </error-check>
  
  <exit>
    <file type="string">libexit.so</file>
    <real-time-factor type="double">1</real-time-factor>
    <priority type="double">0</priority>
  </exit>
  
  <jump-to>
    <file type="string">libjump-to.so</file>
    <real-time-factor type="double">1</real-time-factor>
    <priority type="double">5</priority>
    <angle-of-elevation type="double">0.78</angle-of-elevation>
    <heading type="double">0</heading>
    <range type="double">0.25</range>
    <duration type="double">1</duration>
  </jump-to>
  
  <center-of-mass>
    <file type="string">libcenter-of-mass.so</file>
    <real-time-factor type="double">1</real-time-factor>
    <priority type="double">0</priority>
  </center-of-mass>
  
  <end-effectors>
    <file type="string">libend-effectors.so</file>
    <real-time-factor type="double">1</real-time-factor>
    <priority type="double">0</priority>
  </end-effectors>
  
  <output>
    <file type="string">liboutput.so</file>
    <real-time-factor type="double">10</real-time-factor>
    <priority type="double">10</priority>
    <print-data>
      <vec3 type="string vector">
        center_of_mass.x
        center_of_mass.xd
        center_of_mass.xdd
        roll_pitch_yaw
        zero_moment_point
      </vec3>
      <pose3 type="string vector">
        base_link_frame
        base_horizontal_frame
        base_stability_frame
      </pose3>
      <end-effector>
        <vec3 type="string vector">
          state.x state.xd state.xdd
          goal.x goal.xd goal.xdd
        </vec3>
        <bool type="string vector">
          stance
        </bool>
      </end-effector>
    </print-data>
  </output>
  
  <settle-feet>
    <file type="string">libsettle-feet.so</file>
    <real-time-factor type="double">1</real-time-factor>
    <priority type="double">4</priority>
    <des-contact type="bool">false</des-contact>
    <acceleration type="bool">false</acceleration>
  </settle-feet>
  
  <orient-base>
    <!-- Updates stability-frame until base-frame is level -->
    <file type="string">liborient-base.so</file>
    <real-time-factor type="double">1</real-time-factor>
    <priority type="double">1</priority>
    <pose type="double">0.0 0 0 0 0 0</pose>
  </orient-base>
  
  <eef-PID-controller>
    <file type="string">libeef-PID-controller.so</file>
    <priority type="double">10</priority>
    <real-time-factor type="double">1</real-time-factor>
    <id type="string">LF_FOOT           RF_FOOT             LH_FOOT             RH_FOOT</id>
    <gains>
      <kp type="double">1e3 1e3 1e3   1e3 1e3 1e3   1e3 1e3 1e3   1e3 1e3 1e3</kp>
      <kv type="double">3e1 3e1 3e1     3e1 3e1 3e1     3e1 3e1 3e1     3e1 3e1 3e1     </kv>
      <ki type="double">0 0 0     0 0 0     0 0 0     0 0 0</ki>
    </gains>
  </eef-PID-controller>
</XML>